1. 讲讲IO里面的常见类，字节流、字符流、接口、实现类、方法阻塞。
字节流
字节流主要是操作byte类型数据，也byte数组为准，主要操作类就是
·字节输出流：OutputStream
·字节输入流：InputStream
字符流
在程序中一个字符等于2个字节，那么java提供了Reader、Writer两个专门操作字符流的类。
·字符输出流：Writer
·字符输入流：Reader
字节-字符转换流
OutputStreamWriter和InputStreamReader
在整个IO包中，实际上就是字节流和字符流，但是除了这两个流之外，还存在一组字节流-字符流的转换类。

2. 讲讲NIO。
Java NIO提供了与标准IO不同的IO工作方式：
    Channels and Buffers（通道和缓冲区）：标准的IO基于字节流和字符流进行操作的，而NIO是基于通道（Channel）和缓冲区（Buffer）进行操作，数据总是从通道读取到缓冲区中，或者从缓冲区写入到通道中。
    Asynchronous IO（异步IO）：Java NIO可以让你异步的使用IO，例如：当线程从通道读取数据到缓冲区时，线程还是可以进行其他事情。当数据被写入到缓冲区时，线程可以继续处理它。从缓冲区写入通道也类似。
    Selectors（选择器）：Java NIO引入了选择器的概念，选择器用于监听多个通道的事件（比如：连接打开，数据到达）。因此，单个的线程可以监听多个数据通道。

3. String 编码UTF-8 和GBK的区别?
GBK编码：是指中国的中文字符，其它它包含了简体中文与繁体中文字符，另外还有一种字符“gb2312”，这种字符仅能存储简体中文字符。
UTF-8编码：它是一种全国家通过的一种编码，如果你的网站涉及到多个国家的语言，那么建议你选择UTF-8编码。
UTF8编码格式很强大，支持所有国家的语言，正是因为它的强大，才会导致它占用的空间大小要比GBK大，对于网站打开速度而言，也是有一定影响的。
GBK编码格式，它的功能少，仅限于中文字符，当然它所占用的空间大小会随着它的功能而减少，打开网页的速度比较快。

4. 什么时候使用字节流、什么时候使用字符流?
字符流处理的单元为2个字节的Unicode字符，分别操作字符、字符数组或字符串，而字节流处理单元为1个字节， 操作字节和字节数组。所以
字符流是由Java虚拟机将字节转化为2个字节的Unicode字符为单位的字符而成的，所以它对多国语言支持性比较好！如果是 
音频文件、图片、歌曲，就用字节流好点，如果是关系到中文（文本）的，用字符流好点. 
  所有文件的储存是都是字节（byte）的储存，在磁盘上保留的并不是文件的字符而是先把字
  符编码成字节，再储存这些字节到磁盘。在读取文件（特别是文本文件）时，也是一个字节一个字节地读取以形成字节序列. 
      字节流可用于任何类型的对象，包括二进制对象，而字符流只能处理字符或者字符串； 
      2.字节流提供了处理任何类型的IO操作的功能，但它不能直接处理Unicode字符，而字符流就可以。

5. 递归读取文件夹下的文件，代码怎么实现
private void startTest(String testFileDir) {

           File[] testFile = new File(testFileDir).listFiles();

           for(int i=0; i<testFile.length; i++)

           {

              if(testFile[i].isFile())

              {

                  //文件处理代码...

              }

              else

                  if(testFile[i].isDirectory())

                  {

                     startTest(testFile[i].getPath());

                  }

                  else

                  {

                     System.out.println("文件读入有误！");

                  }

           }

}